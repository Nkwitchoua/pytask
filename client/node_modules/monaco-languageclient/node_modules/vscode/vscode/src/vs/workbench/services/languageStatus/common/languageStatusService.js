import { compare } from 'monaco-editor/esm/vs/base/common/strings.js';
import { LanguageFeatureRegistry } from 'monaco-editor/esm/vs/editor/common/languageFeatureRegistry.js';
import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';
const ILanguageStatusService = ( createDecorator('ILanguageStatusService'));
class LanguageStatusServiceImpl {
    constructor() {
        this._provider = ( new LanguageFeatureRegistry());
        this.onDidChange = this._provider.onDidChange;
    }
    addStatus(status) {
        return this._provider.register(status.selector, status);
    }
    getLanguageStatus(model) {
        return this._provider.ordered(model).sort((a, b) => {
            let res = b.severity - a.severity;
            if (res === 0) {
                res = compare(a.source, b.source);
            }
            if (res === 0) {
                res = compare(a.id, b.id);
            }
            return res;
        });
    }
}
export { ILanguageStatusService, LanguageStatusServiceImpl };
