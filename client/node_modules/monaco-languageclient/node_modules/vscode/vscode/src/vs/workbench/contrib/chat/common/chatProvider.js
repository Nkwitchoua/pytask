import { toDisposable } from 'monaco-editor/esm/vs/base/common/lifecycle.js';
import { createDecorator } from 'monaco-editor/esm/vs/platform/instantiation/common/instantiation.js';
const IChatProviderService = ( createDecorator('chatProviderService'));
class ChatProviderService {
    constructor() {
        this._providers = ( new Map());
    }
    lookupChatResponseProvider(identifier) {
        return this._providers.get(identifier)?.metadata;
    }
    registerChatResponseProvider(identifier, provider) {
        if (( this._providers.has(identifier))) {
            throw new Error(`Chat response provider with identifier ${identifier} is already registered.`);
        }
        this._providers.set(identifier, provider);
        return toDisposable(() => this._providers.delete(identifier));
    }
    fetchChatResponse(identifier, messages, options, progress, token) {
        const provider = this._providers.get(identifier);
        if (!provider) {
            throw new Error(`Chat response provider with identifier ${identifier} is not registered.`);
        }
        return provider.provideChatResponse(messages, options, progress, token);
    }
}
export { ChatProviderService, IChatProviderService };
