import { __decorate, __param } from '../../../../../../../external/tslib/tslib.es6.js';
import { DisposableStore } from 'monaco-editor/esm/vs/base/common/lifecycle.js';
import { IContextMenuService } from 'monaco-editor/esm/vs/platform/contextview/browser/contextView.js';
import { ILayoutService } from 'monaco-editor/esm/vs/platform/layout/browser/layoutService.js';
import { Registry } from 'monaco-editor/esm/vs/platform/registry/common/platform.js';
import { Extensions } from '../../../common/contributions.js';
let ContextMenuContribution = class ContextMenuContribution {
    constructor(layoutService, contextMenuService) {
        this.disposables = ( new DisposableStore());
        const update = (visible) => layoutService.activeContainer.classList.toggle('context-menu-visible', visible);
        contextMenuService.onDidShowContextMenu(() => update(true), null, this.disposables);
        contextMenuService.onDidHideContextMenu(() => update(false), null, this.disposables);
    }
};
ContextMenuContribution = ( __decorate([
    ( __param(0, ILayoutService)),
    ( __param(1, IContextMenuService))
], ContextMenuContribution));
( Registry.as(Extensions.Workbench))
    .registerWorkbenchContribution(ContextMenuContribution, 4 );
